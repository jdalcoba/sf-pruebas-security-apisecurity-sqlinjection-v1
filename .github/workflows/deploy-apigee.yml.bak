# Este es un workflow básico de GitHub Actions para despliegue en Apigee

name: CI Apigee Shared Flow Deployment

# Controla cuándo se ejecuta el workflow
on:
  # Desencadena el workflow en push o pull request a la rama "main-v1"
  push:
    branches: [ "main-v1" ]
  pull_request:
    branches: [ "main-v1" ]

  # Permite ejecutar el workflow manualmente desde la pestaña Actions
  workflow_dispatch:

# Un run de workflow se compone de uno o más jobs que pueden ejecutarse secuencialmente o en paralelo
jobs:
  # Este workflow contiene un solo job llamado "build"
  build:
    # El tipo de runner que se usará en este job
    runs-on: ubuntu-latest

    # Los steps representan una secuencia de tareas que se ejecutarán como parte del job
    steps:
      # Clona tu repositorio en $GITHUB_WORKSPACE para que tu job pueda acceder a él
      - uses: actions/checkout@v4
      
      # Instalar Node.js versión 20
      - name: Configurar Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Verifica si jq está instalado, de lo contrario lo instala
      - name: Verificar si jq está instalado
        run: |
          if ! command -v jq &> /dev/null; then
            echo "Instalando jq..."
            sudo apt-get update && sudo apt-get install -y jq
          fi

      # Verifica si gcloud CLI está instalado
      - name: Verificar si gcloud CLI está instalado
        id: gcloud-check
        run: |
          if command -v gcloud > /dev/null; then
            echo "gcloud está instalado"
            echo "gcloud-installed=true" >> $GITHUB_ENV
          else
            echo "gcloud no está instalado"
            echo "gcloud-installed=false" >> $GITHUB_ENV
          fi

      # Condicionalmente instalar gcloud si no está instalado
      - name: Instalar Google Cloud SDK si es necesario
        if: env.gcloud-installed == 'false'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT }}
          service_account_email: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_EMAIL }}
          credentials_json: ${{ secrets.GCLOUD_KEY }}

      # Autenticación usando el servicio de Google
      - name: Autenticación con Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCLOUD_KEY }}

      # Ejecuta Apigeelint para validar el código del Shared Flow
      - name: Validar el código del Shared Flow con Apigeelint
        run: |
          npm install -g apigeelint
          apigeelint -s ./Code/sharedflowbundle -f table
        continue-on-error: true  # Que prosiga pese a los errores de linteo

      # Comprimir la carpeta sharedflowbundle sin incluir la carpeta "Code"
      - name: Comprimir sharedflowbundle correctamente
        run: |
          cd Code
          zip -r ../sharedflowbundle.zip ./sharedflowbundle
          
       # Subir el Shared Flow a Apigee usando la API REST
      - name: Subir API Shared Flow a Apigee
        run: |
          echo "Subiendo Shared Flow ${{ secrets.SF_NAME }}..."
          RESPONSE=$(curl -X POST \
            "https://apigee.googleapis.com/v1/organizations/${{ secrets.APIGEE_ORG }}/apis?action=import&name=${{ secrets.SF_NAME }}" \
            -H "Authorization: Bearer $(gcloud auth print-access-token)" \
            -F "file=@./sharedflowbundle.zip")
          echo "Respuesta de subida: $RESPONSE"

          # Extraer el número de revisión del Shared Flow subido
          REVISION=$(echo $RESPONSE | jq -r '.revision')
          echo "Revisión importada: $REVISION"

           # Desplegar el Shared Flow si la subida fue exitosa
            if [[ "$REVISION" != "null" ]]; then
                echo "Desplegando Shared Flow ${{ secrets.SF_NAME }} en el entorno ${{ secrets.APIGEE_ENV }} con la revisión $REVISION"
                DEPLOY_RESPONSE=$(curl -X POST \
                  "https://apigee.googleapis.com/v1/organizations/${{ secrets.APIGEE_ORG }}/environments/${{ secrets.APIGEE_ENV }}/apis/${{ secrets.SF_NAME }}/revisions/$REVISION/deployments?override=true" \
                  -H "Authorization: Bearer $(gcloud auth print-access-token)")
                echo "Respuesta de despliegue: $DEPLOY_RESPONSE"
            else
                echo "Error al subir el shared flow."
                exit 1
            fi
            
